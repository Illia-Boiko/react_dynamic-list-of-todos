{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoItems/TodoItems.tsx","api/index.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["FilterByStatus","TodoItems","props","visibleTodos","map","todo","className","classNames","TodoList__item","completed","type","readOnly","title","button","selectedUser","userId","onClick","onChangeUser","id","TodoList","state","todos","filterBy","All","titleFilter","filterOptions","Active","Completed","loadTodos","setState","getFilterTodos","filter","toLowerCase","includes","selectHandleChange","event","a","target","value","inputHandleChange","prevProps","this","placeholder","name","onChange","selectItem","React","Component","API_URL","getBaseData","endpoint","fetch","data","ok","headers","get","json","getTodos","getUserById","user","console","log","CurrentUser","getUser","email","phone","App","selectedUserId","downloadTodos","changeSelectedUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75f1e126.chunk.js","sourcesContent":["import React from 'react';\nimport { TodoItems } from '../TodoItems';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n  selectedUser: number;\n  onChangeUser: (id: number) => void;\n};\n\ntype State = {\n  visibleTodos: Todo[]\n  filterBy: FilterByStatus;\n  titleFilter: string;\n};\n\nenum FilterByStatus {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    visibleTodos: this.props.todos,\n    filterBy: FilterByStatus.All,\n    titleFilter: '',\n  };\n\n  filterOptions = [FilterByStatus.All, FilterByStatus.Active, FilterByStatus.Completed];\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.todos !== this.props.todos) {\n      this.loadTodos();\n    }\n  }\n\n  loadTodos = () => {\n    this.setState({\n      visibleTodos: this.props.todos,\n    });\n  };\n\n  getFilterTodos = () => {\n    const { filterBy, titleFilter } = this.state;\n    const { todos } = this.props;\n\n    switch (true) {\n      case (filterBy === FilterByStatus.All):\n        this.setState({\n          visibleTodos: todos.filter(todo => (\n            todo.title\n              .toLowerCase()\n              .includes(titleFilter.toLowerCase())\n          )),\n        });\n        break;\n      case (filterBy === FilterByStatus.Active):\n        this.setState({\n          visibleTodos: todos.filter(todo => (\n            !todo.completed\n            && todo.title\n              .toLowerCase()\n              .includes(titleFilter.toLowerCase())\n          )),\n        });\n        break;\n      case (filterBy === FilterByStatus.Completed):\n        this.setState({\n          visibleTodos: todos.filter(todo => (\n            todo.completed\n            && todo.title\n              .toLowerCase()\n              .includes(titleFilter.toLowerCase())\n          )),\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  selectHandleChange = async (event: React.ChangeEvent<HTMLSelectElement>) => {\n    await this.setState({\n      filterBy: event.target.value as FilterByStatus,\n    });\n    this.getFilterTodos();\n  };\n\n  inputHandleChange = async (event : React.ChangeEvent<HTMLInputElement>) => {\n    await this.setState({\n      titleFilter: event.target.value,\n    });\n    this.getFilterTodos();\n  };\n\n  render() {\n    const { selectedUser, onChangeUser } = this.props;\n    const { visibleTodos, filterBy } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          placeholder=\"Search by title\"\n          name=\"titleFilter\"\n          type=\"text\"\n          onChange={this.inputHandleChange}\n          className=\"TodoList__input\"\n        />\n\n        <select\n          name=\"filterBy\"\n          value={filterBy}\n          onChange={this.selectHandleChange}\n          className=\"TodoList__select\"\n        >\n          {this.filterOptions.map(selectItem => (\n            <option\n              value={selectItem}\n              key={selectItem}\n            >\n              {selectItem}\n            </option>\n          ))}\n        </select>\n\n        <button\n          type=\"button\"\n          onClick={() => onChangeUser(0)}\n          className=\"TodoList__button button\"\n        >\n          Clear selected user\n        </button>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            <TodoItems\n              selectedUser={selectedUser}\n              onChangeUser={onChangeUser}\n              visibleTodos={visibleTodos}\n            />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  visibleTodos: Todo[];\n  selectedUser: number;\n  onChangeUser: (id: number) => void;\n};\n\nexport const TodoItems: React.FC<Props> = (props) => {\n  return (\n    <>\n      {props.visibleTodos.map(todo => (\n        <li\n          key={todo.id}\n          className={classNames(\n            {\n              TodoList__item: true,\n              'TodoList__item--unchecked': !todo.completed,\n              'TodoList__item--checked': todo.completed,\n            },\n          )}\n        >\n          <label>\n            <input type=\"checkbox\" readOnly />\n            <p>{todo.title}</p>\n          </label>\n          <button\n            className={classNames(\n              {\n                button: true,\n                'TodoList__user-button': true,\n                'TodoList__user-button--selected': props.selectedUser === todo.userId,\n              },\n            )}\n            type=\"button\"\n            onClick={() => props.onChangeUser(todo.userId)}\n          >\n            {`User #${todo.userId}`}\n          </button>\n        </li>\n      ))}\n    </>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api/';\n\nasync function getBaseData(endpoint: string) {\n  const data = await fetch(`${API_URL}${endpoint}`);\n\n  if (data.ok && data.headers.get('content-type')?.includes('application/json')) {\n    return data.json();\n  }\n\n  return null;\n}\n\nexport async function getTodos(): Promise<Todo[]> {\n  const todos = await getBaseData('todos');\n\n  return todos;\n}\n\nexport async function getUserById(id: number): Promise<User> {\n  const user = await getBaseData(`users/${id}`);\n\n  return user;\n}\n\n// eslint-disable-next-line no-console\nconsole.log(getUserById(2));\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUserById } from '../../api/index';\n\ntype Props = {\n  selectedUser: number;\n};\n\ntype State = {\n  user: User | null;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.selectedUser !== this.props.selectedUser) {\n      this.getUser();\n    }\n  }\n\n  getUser = async () => {\n    const user = await getUserById(this.props.selectedUser);\n\n    this.setState({\n      user,\n    });\n  };\n\n  render() {\n    const { user } = this.state;\n\n    return user ? (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user ${user.id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n      </div>\n    ) : (\n      <p>No users with this ID or you are offline</p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\ntype State = {\n  selectedUserId: number;\n  todos: Todo[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n  };\n\n  componentDidMount() {\n    this.downloadTodos();\n  }\n\n  downloadTodos = async () => {\n    this.setState({\n      todos: await getTodos(),\n    });\n  };\n\n  changeSelectedUser = (id: number) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUser={selectedUserId}\n            onChangeUser={this.changeSelectedUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUser={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}